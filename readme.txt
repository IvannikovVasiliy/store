Consumer - клиент, возвращающий заказ

1. Сервис Order создает заказ с состоянием PENDING.
2. Сервис Order возвращает своему клиенту ответ с ID заказа.
3. Сервис Order шлет сообщение ValidateConsumerlnfo сервису Consumer.
4. Сервис Order шлет сообщение ValidateOrderDetails сервису Restaurant.
5. Сервис Consumer получает сообщение ValidateConsumerlnfo, проверяет, может ли
заказчик размещать заказ, и отправляет сообщение ConsumerValidated сервису
Order.
6. Сервис Restaurant получает сообщение ValidateOrderDetails, 
проверяет корректность элементов меню и способность ресторана доставить заказ по заданному адресу 
и отправляет сообщение OrderDetailsValidated сервису Order.
7. Сервис Order получает сообщения ConsumerValidated и OrderDetailsValidated
и меняет состояние заказа на VALIDATED.
И так далее...
Сервис Order может получить сообщения ConsumerValidated и OrderDetailsValidated в любом порядке. 
Чтобы знать, какое из них он получил первым, он меняет
состояние заказа. Если первым пришло сообщение ConsumerValidated, состояние
заказа меняется на CONSUMER-VALIDATED, а если OrderDetailsValidated — на ORDER_
DETAILS-VALIDATED. Получив второе сообщение, сервис Order присваивает заказу
состояние VALIDATED.
После проверки заказа сервис Order выполняет оставшиеся шаги по его созданию, о которых мы поговорим в следующей главе. 
Замечательной стороной этого
подхода является то, что сервис Order сможет создать заказ и ответить клиенту,
даже если сервис Consumer окажется недоступным. Рано или поздно сервис Consumer
восстановится и обработает все отложенные сообщения, что позволит завершить
проверку заказов